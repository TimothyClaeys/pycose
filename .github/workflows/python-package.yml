# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install build

    - name: Build package
      run: |
        python -m build
    
    - name: Upload package to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout project
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        pip install flake8
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - name: Checkout project
      uses: actions/checkout@v3
    
    - name: Download package from artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist

    - name: List all files
      run: ls -R

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install test dependencies
      run: |
        pip install pytest

    - name: Install package
      run: |
        pip install dist/*.whl
    
    - name: Test with pytest
      run: |
        mkdir tmp_for_test
        cp -r tests/ tmp_for_test/
        cd tmp_for_test
        pytest
